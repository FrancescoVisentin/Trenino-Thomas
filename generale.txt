

int main()
{   
    cin>>input1;
    cin>>input2;


    simulation s1 (input1,input2);
    s1.la_mia_Simulazione();


    return 0;
}




simulation
{
    public:
        simulation(input1,input2)
        {
            la_mia_Simulazione();
        }

        void la_mia_Simulazione()
        {
            while(tempo)
            {
                controlla_partenza_nuovi_treni(); //scansiona treni_totali e vede se ci sono treni che devono partire ora
                controllo_arrivo_treni_instazione(); //controlla ritardo, controlla stazione piena
                controlla_distanza_treni(); //aggiorna velocità
                controlla_partenza_treni_dalla_stazione(); //vedi sotto

                wait(1 minuto)
            }
        }

    private:
        std::vector<treni*> treni_totali;
        std::vector<stazioni*> stazioni;
        timetables;
        line;


        

}


//partenza treno:
-treni pronti a partire lo comunicano.
    -stazione controlla priorità velocità treni.
    -decide quale dei due treni partirà.
    -controlla treni in transito.
    -ci sono treni in transito che supererebbero la stazione (punto zero) in meno del tempo 4 min?
     ovvero: (Vt*4 + posizione >  centro stazione) (s/n)
        s: aspetto transito treno.
        n: faccio partire il treno in stazione.



//treno:
cosa deve sapere?
    -posizione rispetto all'origine.
    -ritardo
    -velocità
    -devo fermarmi poi?
    -orari arrivo 


//check stazioni:
-binari pieni, fermarsi ai box (priorità ai box?)
-controllo priorità da dare ai treni in fermata per la ripartenza
-controllo 



//timetables
25 0 1 Verona 8.30 San Bonifaccio 9.00 Venezia 12.00
54 0 2 Verona 8.56 Padova 9.24 Venezia 11.00
